services:
  app:
    container_name: dnd_app
    build: .
    command: yarn start:dev
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
            - dist/
        - action: sync
          path: ./test
          target: /app/test
        - action: rebuild
          path: package.json
        - action: rebuild
          path: yarn.lock

    depends_on:
      - redis
      - db
    restart: always

  redis:
    container_name: cache
    image: redis/redis-stack:7.2.0-v14
    ports:
      - '${REDIS_PORT}:6379'
    restart: unless-stopped
    volumes:
      - cache:/data

  db:
    container_name: db
    image: mongo:8.0.6 # Используем MongoDB вместо PostgreSQL
    restart: always
    ports:
      - '${DB_PORT}:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - db:/data/db # Сохраняем данные MongoDB в volume

  mongo-express:
    container_name: mongo-express
    image: mongo-express:1.0.2
    ports:
      - '8081:8081' # Открываем порт 8081 для доступа
    environment:
      - ME_CONFIG_MONGODB_SERVER=db
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD}
    depends_on:
      - db # Зависит от MongoDB
    restart: always

volumes:
  db:
  app:
  cache:
